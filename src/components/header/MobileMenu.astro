---
const menuItems = [
  { label: 'Inicio', href: '/' },
  { label: 'Tarjetas de Crédito', href: '/tarjetas-de-credito' },
  { label: 'Bancos', href: '/banco' }
];
---

<div class="md:hidden">
  <button
    type="button"
    id="mobile-menu-button"
    class="inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-lime-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-lime-500"
  >
    <span class="sr-only">Abrir menú</span>
    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
    </svg>
  </button>
</div>

<div 
  id="mobile-menu"
  class="hidden fixed inset-0 z-50 md:hidden"
  role="dialog"
  aria-modal="true"
>
  <div class="fixed inset-0 bg-black/20 backdrop-blur-sm" aria-hidden="true"></div>
  
  <div class="fixed inset-y-0 right-0 w-full max-w-sm bg-white shadow-xl">
    <div class="flex h-16 items-center justify-between px-6 border-b border-gray-200">
      <h2 class="text-lg font-medium">Menú</h2>
      <button 
        type="button"
        id="close-menu-button"
        class="rounded-md p-2 text-gray-400 hover:text-gray-500"
      >
        <span class="sr-only">Cerrar menú</span>
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <nav class="px-6 py-6">
      <ul class="space-y-3">
        {menuItems.map(item => (
          <li>
            <a
              href={item.href}
              class="block rounded-lg px-3 py-2 text-base font-medium text-gray-900 hover:bg-gray-50 hover:text-lime-700"
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</div>

<script>
  const mobileMenu = document.getElementById('mobile-menu');
  const openButton = document.getElementById('mobile-menu-button');
  const closeButton = document.getElementById('close-menu-button');

  function toggleMenu(show: boolean) {
    if (mobileMenu) {
      if (show) {
        document.body.style.overflow = 'hidden';
        mobileMenu.classList.remove('hidden');
      } else {
        document.body.style.overflow = '';
        mobileMenu.classList.add('hidden');
      }
    }
  }

  openButton?.addEventListener('click', () => toggleMenu(true));
  closeButton?.addEventListener('click', () => toggleMenu(false));
  
  // Close menu when clicking outside
  mobileMenu?.addEventListener('click', (e) => {
    if (e.target === mobileMenu) {
      toggleMenu(false);
    }
  });

  // Close menu on navigation
  document.addEventListener('astro:after-navigation', () => toggleMenu(false));
</script>
